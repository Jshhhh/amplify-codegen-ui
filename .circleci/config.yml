version: 2.1

orbs:
  node: circleci/node@4.7
  cypress: cypress-io/cypress@1.29.0

jobs:
  install:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - restore_node_modules
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Lerna Bootstrap
          command: npx lerna bootstrap
      - save_cache:
          key: v1-deps-{{ checksum "package-lock.json" }}-{{ checksum "combined-package-lock.txt" }}-test1
          paths:
            - node_modules
            - packages/codegen-ui/node_modules
            - packages/codegen-ui-react/node_modules
            - packages/test-generator/node_modules

  style:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - restore_node_modules
      - run:
          name: Prettier
          command: npm run format:check
      - run:
          name: ESLint
          command: npm run lint
      - run:
          name: Commit Message
          command: |
            echo `git log --format=%s -n 1 $CIRCLE_SHA1` > commit-message-tmp
            ./.husky/commit-msg commit-message-tmp
            rm commit-message-tmp

  build:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - restore_node_modules
      - run: npm run build
      - save_cache:
          key: dist-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - packages/codegen-ui/dist
            - packages/codegen-ui-react/dist
            - packages/test-generator/dist

  unit-test:
    docker:
      - image: cimg/node:16.10
    resource_class: large
    steps:
      - checkout
      - restore_node_modules
      - run:
          name: Unit Test
          command: npm run test
      - run:
          name: Codecov
          command: npx codecov

  publish:
    docker:
      - image: cimg/node:16.10
    steps:
      - checkout
      - restore_node_modules
      - restore_cache:
          keys:
            - dist-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: NPM Login
          command: npm set "//registry.npmjs.org/:_authToken" $NPM_ACCESS_TOKEN
      - run:
          name: NPM Publish
          command: bash ./.circleci/publish.sh

workflows:
  build:
    jobs:
      - install
      - style:
          requires:
            - install
      - build:
          requires:
            - install
      - unit-test:
          requires:
            - install
      - cypress/install:
          resource_class: large
          requires:
            - build
          post-checkout:
            - restore_node_modules
          cache-key: functional-test-{{ checksum "packages/integration-test/package-lock.json" }}
          working_directory: packages/integration-test
          pre-steps:
            - run: npm run integ:setup
      - cypress/run:
          resource_class: large
          requires:
            - cypress/install
          cache-key: functional-test-{{ checksum "packages/integration-test/package-lock.json" }}
          working-directory: packages/integration-test
          install: false
          start: npm start
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 210
          parallel: true
          parallelism: 3
      - publish:
          requires:
            - style
            - build
            - unit-test
            - cypress/run
          filters:
            branches:
              only:
                - main
                - develop
                - /tagged-release\/.*/

commands:
  create_concatenated_package_lock:
    description: 'Concatenate all package-lock.json files recognized by lerna.js into single file. File is used as checksum source for part of caching key.'
    parameters:
      filename:
        type: string
    steps:
      - run:
          name: Combine package-lock.json files to single file
          command: npx lerna la -a | awk -F packages '{gsub("   \\(PRIVATE\\)", "");printf "\"packages%s/package-lock.json\" ", $2}' | xargs cat > << parameters.filename >>

  restore_node_modules:
    description: 'Restore node_modules cache using concatenated package-lock.'
    steps:
      - create_concatenated_package_lock:
          filename: combined-package-lock.txt
      - restore_cache:
          keys:
            - v1-deps-{{ checksum "package-lock.json" }}-{{ checksum "combined-package-lock.txt" }}-test1
